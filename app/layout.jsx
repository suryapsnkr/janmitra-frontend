'use client';
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import { useState, useEffect } from 'react';
import Sidebar from "./components/Sidebar";
import UserBar from "./components/UserBar";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

const metadata = {
  title: "Janmitra Admin Panel",
  description: "Generated by create next app",
};

export default function RootLayout({ children }) {
  const [isSidebarOpen, setIsSidebarOpen] = useState(false);
  const [isAuthenticated, setIsAuthenticated] = useState(false);
  const [email, setEmail] = useState('');
  const [pass, setPass] = useState('');

  useEffect(() => {
    const token = localStorage.getItem('token');
    if (token) setIsAuthenticated(true);
  }, []);

  // Prevent scroll when sidebar is open on small screens
  useEffect(() => {
    if (isSidebarOpen && window.innerWidth < 768) {
      document.body.classList.add('overflow-hidden');
    } else {
      document.body.classList.remove('overflow-hidden');
    }
  }, [isSidebarOpen]);

  const toggleSidebar = () => setIsSidebarOpen(prev => !prev);

  const handleLogout = () => {
    localStorage.removeItem('token');
    setIsAuthenticated(false);
  };

  const handleLogin = () => {
    if (email === 'admin@example.com' && pass === '123456') {
      localStorage.setItem('token', 'mock-token');
      setIsAuthenticated(true);
    } else {
      alert('Invalid credentials');
    }
  };

  return (
    <html lang="en">
      <title>Janmitra Admin Panel</title>
      <body className={`${geistSans.variable} ${geistMono.variable} antialiased`}>
        {isAuthenticated ? (
          <div className="flex h-screen overflow-hidden">
            <Sidebar isOpen={isSidebarOpen} toggleSidebar={toggleSidebar} />
            <div className="flex flex-col flex-1 h-full">
              <UserBar title="जनमित्र Admin Panel" onLogout={handleLogout} onToggleSidebar={toggleSidebar} />
              <main className="flex-1 overflow-y-auto p-4 bg-gray-100">
                {children}
              </main>
            </div>
          </div>
        ) : (
          <div className="flex items-center justify-center min-h-screen bg-gray-100 px-4">
            <div className="bg-white p-6 rounded shadow-md w-full max-w-sm">
              <h2 className="text-xl font-semibold mb-4 text-center">Admin Login</h2>
              <input
                type="email"
                placeholder="Email"
                className="w-full border p-2 mb-3 rounded"
                value={email}
                onChange={(e) => setEmail(e.target.value)}
              />
              <input
                type="password"
                placeholder="Password"
                className="w-full border p-2 mb-3 rounded"
                value={pass}
                onChange={(e) => setPass(e.target.value)}
              />
              <button
                onClick={handleLogin}
                className="w-full bg-blue-600 text-white p-2 rounded hover:bg-blue-700 transition"
              >
                Login
              </button>
            </div>
          </div>
        )}
      </body>
    </html>
  );
}
